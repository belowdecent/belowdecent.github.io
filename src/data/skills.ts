const skills: { title: string, description: string }[] = [
	{
		title: "HTML",
		description: `
С изучения HTML начался мой путь в веб-разработке и программировании в целом.
<br/>
Хоть HTML не язык программирования, а разметки, но для многих (включая меня) 
именно от него люди потом переходят к языкам программирования. 
<br/>
Несмотря на то, что язык старый <i>(первая версия HTML была опубликована в 1993 году)</i>, 
в него регулярно добавляют новые элементы, которые делают 
веб-разработку проще, мощнее или и то, и то сразу.
<br/><br/>
В веб-разработке я естественно регулярно использую HTML, 
стараюсь использовать семантические теги когда возможно, 
и в целом писать код так, чтобы его легче всего было понять в будущем.
`,
	},
	{
		title: "CSS/SCSS",
		description: `
Один из самых веселых способов рисовать что-либо на экране.
<br/>
Рисовать на бумаге я никогда не умел, да и в цифровую графику мне тоже сложно.
Но по каким-то непонятным причинам, рисовать дизайны, даже когда я знаю что они совершенно отвратительны,
очень весело с помощью CSS.
<br/>
В частности, создавая сайты или графические приложения, где я могу задействовать веб-технологии
(Electron-ы там всякие, Tauri), вместо дефолтного CSS я использую SCSS.
<br/>
SCSS - это тот же CSS, но с очень приятными плюшками, такие как миксины, статические переменные, 
куча функций для работы с цветом и nesting в блоках.
`,
	},
	{
		title: "JS/TS",
		description: `
Ну и естественно, ежели мы говорим про веб-технологии, надо упомянуть бич всех фронтендеров 
(да и последнее время бекендеров) - Javascript.
<br/>
<br/>
Работать с ним почти в любом проекте надо, но если его использовать ради вменяемых целей 
(добавлять немного интерактивности на сайт), то даже не так плохо.
<br/>
<br/>
А вот когда дело заходит до более сложных тем, Javascript-ом пользоваться, по моему мнению, 
очень неприятно. И собственно для этого я и использую Typescript.
<br/>
<br/>
Казалось бы, тот же JS только с типами данных, но дев-экспириенс совершенно другой. 
Так что, везде где требуется что-то сложнее добавить анимацию при нажатии на кнопку, 
я беру TS.
`
	},
	{
		title: "Wordpress",
		description: `
Статические сайты - это конечно круто, но когда тебя дядьки просят "дай сайт, чтоб работал и картинки 
добавлять можно", легче не морочить голову и дать им сайт на Wordpress.
<br/>
<br/>
Wordpress мне не нравится, но я понимаю его популярность и необходимость. Благо 
со временем я научился на нем пилить вещи очень быстро, так что когда ситуация когда он нужен 
возникает, то даже не так больно.
<br/>
<br/>
Но пожалуйста, не просите меня что-то делать на Wordpress, если только вы не собираетесь платить мне
деньги.
`
	},
	{
		title: "React",
		description: `
Есть миллионы JS-фреймворков для фронтенда, и я бы с радостью использовал другие (да и с радостью их и 
использую), но если хочешь шанс на работу фронтендером - надо знать React.
<br/>
<br/>
Его я знаю более менее, но делать на нем что-то, мне совершенно не доставляет удовольствие. 
С TSX/JSX я уже свыкся, и есть фреймворки, которые работают с ним, которые мне очень приятны (Solid). 
Но сам React имеет совершенно дурацкую экосистему, он медленный, и совершенно неинтуитивный для меня.
<br/><br/>
Но я его плюс-минус знаю, может если мне будут платить за работу с ним деньги, то он мне может даже начать нравится.
`
	},
	{
		title: "Astro",
		description: `
Astro, my beloved.
<br/><br/>
Самый приятный статический генератор сайтов. 
<br/>
<br/>
Писать на нем сайты - одно удовольствие. Деплой - тривиальный.
<br/>
<br/>
Хочешь работать со своим любимым JS-фреймворком? Можешь вставить компоненты хоть из 5 сразу.
<br/>
Не хочешь использовать фреймворки? Не используй.
<br/><br/>
Использую Astro начиная со второй версии, и все еще не увидел ничего даже близкого по уровню и духу.
<br/>
Если я пишу сайт для себя, то в 99.99% случаев я выбираю Astro.
`
	},
	{
		title: "Haxe",
		description: `
Первый язык программирования, который мне понравился.
<br/>
<br/>
Начал его учить в далеком 2018 году, потому что хотел попробовать пилить свои игровые движки.
<br/>
И к моему удвилению преуспел, за время работы с ним я много для себя открыл в области разработки игр, 
принципах ООП, написании языков программирования и программирования как-такового.
<br/>
<br/>
К сожалению, язык очень нишевый, но возможно он может пригодиться в проектах, где требуется язык, 
который может компилиться и в байт-код для виртуалок, и интерпретироваться и компилиться нативно.
`
	},
	{
		title: "Dart",
		description: `
Очень приятная вещь для разработки кросс-платформенных мобильных приложения (еще и в веб можно собрать).
<br/>
<br/>
Использую вместе с Flutter-ом, когда мне нужно сделать мобильное приложение.
Таких моментов у меня было не много, но мне очень нравится в целом как устроен язык, 
но должен признаться, давно на нем не писал за отсутствием надобности.
`
	},
	{
		title: "C",
		description: `
Когда хочется поиграть в темного волшебника, я беру C.
<br/>
<br/>
Из всех языков программирования, с которыми я работал, Си наверное оказал на меня 
наибольший эффект.
<br/>
<br/>
Будучи избалованным ООП, сборщиками мусора, компиляторами, которые сами за тебя половину
багов пофиксят, Си был для меня глотком свежего воздуха.
<br/>
Благодаря Си, я внезапно понял, что программировать можно просто. Как пещерный человек. 
Применять абстракции, исключительно когда они упрощают тебе, разработчику, жизнь.
<br/>
<br/>
Благодаря тому, что я стал меньше жить в своих замках из воображаемых абстракций, 
я стал банально быстрее и эффективнее работать. Решать не выдуманные проблемы, а 
реальные проблемы.
<br/><br/>
В целом когда мне хочется, что-то набросать быстро и просто, я возвращаюсь к Си. 
Несмотря на то, что это далеко не самых легкий язык для работы, он настолько маленький, 
что все сложности, что находятся у тебя в коде - это исключительно твоих рук дело, 
что склоняет тебя к написанию простого кода, который легко дополнить или изменить.
`
	},
	{
		title: "Godot",
		description: `
Лучший видеоигровой движок.
`
	},
];

export default skills;
